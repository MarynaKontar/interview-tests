package com.example.interviewtests;

public class NumberTypesTest {

    public static void main(String[] args) {

        //  BYTE
        byte b;
        double d = 130.874;
        b = (byte) d; // -126
        // => -128, -127, -126 ... 0, 1, 2, ... 127      130.874 приводится к целому (130),
        // но в byte такого числа нет (на 3 больше(130-127=3)) и поэтому идет по кругу к наименьшему
        // значению byte (-128) и прибавляет разницу 3 (-128, -127, -126)
        System.out.println(b);


        d = 454.567;
        b = (byte) d;
        System.out.println(b); // -58  (454 - 128 - 256 = 70, -128 + 70 = -58 )

        d = 514.567;
        b = (byte) d;
        System.out.println(b); // 2  (514 - 128 - 256 = 130, -128 + 130 = 2 )

//      Все целочисленные литералы, например, 10,4, -5, воспринимаются как значения типа int,
//      однако мы можем присваивать целочисленные литералы другим целочисленным типам: byte, long, short.
//      В этом случае Java автоматически осуществляет соответствующие преобразования.
//        byte v = b + b; //  ошибка компиляции т. к. b + b  это int
        byte v = (byte) (b + b);

//      но += и ++ можно
        b += 1;
        System.out.println(b);
        b++;
        System.out.println(b);


        // INT
        int a;
        long c = (long) Math.pow(-2,33);
        a = (int) c;
        System.out.println("long: " + c);
        System.out.println("int: " + a);


//      LONG
        long n = 2121;
//      long num = 2147483649;
//      Здесь число 2147483649 является допустимым для типа long, но выходит за предельные значения для тпа int.
//      И так как все целочисленные значения по умолчанию расцениваются как значения типа int,
//      то компилятор укажет нам на ошибку. Чтобы решить проблему, надо добавить к числу суффикс l или L,
//      который указывает, что число представляет тип long:
        long num = 2147483649L;


//      ЧИСЛА С ПЛАВАЮЩЕЙ ТОЧКОЙ
//      При присвоении переменной типа float дробного литерала с плавающей точкой, например, 3.1, 4.5 и т.д.,
//      Java автоматически рассматривает этот литерал как значение типа double.
//      И чтобы указать, что данное значение должно рассматриваться как float, нам надо использовать суффикс f:
        float fl = 30.6f;
        double db = 30.6;
//      И хотя в данном случае обе переменных имеют практически одно значения,
//      но эти значения будут по-разному рассматриваться и будут занимать разное место в памяти.



        db = Math.pow(3.4, 73);
        fl = (float) db;
        System.out.println("double: " + db);
        System.out.println("float: " + fl);

    }
}
